import csv
import json
import os

def write_json_to_csv(json_obj, csv_file, separator=',', add_index=False):
    # Check if the CSV file exists
    file_exists = os.path.isfile(csv_file)
    
    # Extract keys from the JSON object
    keys = json_obj.keys()
    
    # Write the JSON data to CSV
    with open(csv_file, 'a', newline='') as file:
        writer = csv.DictWriter(file, fieldnames=['index'] + list(keys), delimiter=separator)
        
        if not file_exists:
            writer.writeheader()
        else:
            with open(csv_file, 'r') as check_file:
                reader = csv.DictReader(check_file, delimiter=separator)
                existing_keys = set(reader.fieldnames)
                if set(keys) != existing_keys:
                    raise ValueError("New JSON object keys do not match the columns in the existing CSV file.")
                    
        if add_index:
            with open(csv_file, 'r') as check_file:
                reader = csv.DictReader(check_file, delimiter=separator)
                index = sum(1 for _ in reader) + 1
                
            writer.writerow({'index': index, **json_obj})
        else:
            writer.writerow(json_obj)

# Example usage
json_obj1 = {"ts": 1724237405.6873968, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": False, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj2 = {"ts": 1724237412.5495899, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": True, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}

write_json_to_csv(json_obj1, '/tmp/hello.csv', separator=',', add_index=True)
write_json_to_csv(json_obj2, '/tmp/hello.csv', separator=',', add_index=True)

exit(1)

import csv
import json
import os

def write_json_to_csv(json_obj, csv_file):
    # Check if the CSV file exists
    file_exists = os.path.isfile(csv_file)
    
    # Extract keys from the first JSON object
    keys = json_obj.keys()
    
    # Write the JSON data to CSV
    with open(csv_file, 'a', newline='') as file:
        writer = csv.DictWriter(file, fieldnames=keys)
        
        if not file_exists:
            writer.writeheader()
        else:
            # Check if keys match
            current_keys = set(keys)
            with open(csv_file, 'r') as check_file:
                reader = csv.DictReader(check_file)
                existing_keys = set(reader.fieldnames)
                if current_keys != existing_keys:
                    raise ValueError("New JSON object does not have the same keys and columns as the existing CSV file.")
        
        writer.writerow(json_obj)

# Example usage
json_obj1 = {"ts": 1724237405.6873968, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": False, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj2 = {"ts": 1724237412.5495899, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": True, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}

json_obj3 = {"ts": 1724237412.7553027, "nodeId": 1, "endpointId": "1", "clusterId": "8", "attributeId": "0", "value": 1, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj4 = {"ts": 1724237412.9633584, "nodeId": 1, "endpointId": "1", "clusterId": "8", "attributeId": "0", "value": 254, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj5 = {"ts": 1724237523.548028, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": False, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj6 = {"ts": 1724237676.3593817, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": True, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj7 = {"ts": 1724243836.3710217, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": True, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj8 = {"ts": 1724243993.189941, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": True, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj9 = {"ts": 1724243998.8310523, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": True, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj10 = {"ts": 1724244005.3310614, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": True, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj11 = {"ts": 1724244124.4375043, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": True, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj12 = {"ts": 1724244124.6438465, "nodeId": 1, "endpointId": "1", "clusterId": "8", "attributeId": "0", "value": 1, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj13 = {"ts": 1724244124.850494, "nodeId": 1, "endpointId": "1", "clusterId": "8", "attributeId": "0", "value": 254, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj14 = {"ts": 1724244139.389968, "nodeId": 1, "endpointId": "1", "clusterId": "6", "attributeId": "0", "value": False, "vendorName": "TEST_VENDOR", "productName": "TEST_PRODUCT"}
json_obj15 = {"message_id":"107481","result":[{"node_id":1,"date_commissioned":"2024-08-12T19:15:34.402405","last_interview":"2024-08-12T19:15:34.402410","interview_version":6,"available":True,"is_bridge":False,"attributes":{"0/30/0":[],"0/30/65532":0,"0/30/65533":1,"0/30/65528":[],"0/30/65529":[],"0/30/65531":[0,65528,65529,65531,65532,65533],"0/31/0":[{"1":5,"2":2,"3":[112233],"4":None,"254":1}],"0/31/1":[],"0/31/2":4,"0/31/3":3,"0/31/4":4,"0/31/65532":0,"0/31/65533":1,"0/31/65528":[],"0/31/65529":[],"0/31/65531":[0,1,2,3,4,65528,65529,65531,65532,65533],"0/40/0":17,"0/40/1":"TEST_VENDOR","0/40/2":65521,"0/40/3":"TEST_PRODUCT","0/40/4":32769,"0/40/5":"","0/40/6":"XX","0/40/7":0,"0/40/8":"TEST_VERSION","0/40/9":1,"0/40/10":"1.0","0/40/11":"20200101","0/40/12":"","0/40/13":"","0/40/14":"","0/40/15":"TEST_SN","0/40/16":False,"0/40/18":"892345B5B9FA5E40","0/40/19":{"0":3,"1":65535},"0/40/20":{"0":2,"1":5},"0/40/21":16973824,"0/40/22":5,"0/40/65532":0,"0/40/65533":3,"0/40/65528":[],"0/40/65529":[],"0/40/65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,65528,65529,65531,65532,65533]},"attribute_subscriptions":[]}]}

write_json_to_csv(json_obj1, '/tmp/output_new.csv')
write_json_to_csv(json_obj15, '/tmp/output_new.csv')
'''
write_json_to_csv(json_obj2, '/tmp/output_new.csv')
write_json_to_csv(json_obj3, '/tmp/output_new.csv')
write_json_to_csv(json_obj4, '/tmp/output_new.csv')
write_json_to_csv(json_obj5, '/tmp/output_new.csv')
write_json_to_csv(json_obj6, '/tmp/output_new.csv')
write_json_to_csv(json_obj7, '/tmp/output_new.csv')
write_json_to_csv(json_obj8, '/tmp/output_new.csv')
write_json_to_csv(json_obj9, '/tmp/output_new.csv')
write_json_to_csv(json_obj10, '/tmp/output_new.csv')
write_json_to_csv(json_obj11, '/tmp/output_new.csv')
write_json_to_csv(json_obj12, '/tmp/output_new.csv')
write_json_to_csv(json_obj13, '/tmp/output_new.csv')
write_json_to_csv(json_obj14, '/tmp/output_new.csv')
'''
exit(1)

import json
import pandas as pd

jsonString = '{"message_id":"107481","result":[{"node_id":1,"date_commissioned":"2024-08-12T19:15:34.402405","last_interview":"2024-08-12T19:15:34.402410","interview_version":6,"available":true,"is_bridge":false,"attributes":{"0":{"30":{"0":[],"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"31":{"0":[{"1":5,"2":2,"3":[112233],"4":null,"254":1}],"1":[],"2":4,"3":3,"4":4,"65528":[],"65529":[],"65531":[0,1,2,3,4,65528,65529,65531,65532,65533],"65532":0,"65533":1},"40":{"0":17,"1":"TEST_VENDOR","2":65521,"3":"TEST_PRODUCT","4":32769,"5":"","6":"XX","7":0,"8":"TEST_VERSION","9":1,"10":"1.0","11":"20200101","12":"","13":"","14":"","15":"TEST_SN","16":false,"18":"892345B5B9FA5E40","19":{"0":3,"1":65535},"20":{"0":2,"1":5},"21":16973824,"22":5,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,65528,65529,65531,65532,65533],"65532":0,"65533":3}}},"attribute_subscriptions":[]}]}'

jsonObject = json.loads(jsonString)

print(jsonObject['result'][0]['attributes'])
df = pd.json_normalize(jsonObject['result'][0]['attributes'])

print(df.to_json())


exit(1)
import json
from collections import defaultdict

def transform_json_data(input_json):
    def nested_dict():
        return defaultdict(nested_dict)

    # Convert the defaultdict back to a regular dictionary
    def convert_to_regular_dict(d):
        if isinstance(d, defaultdict):
            d = {k: convert_to_regular_dict(v) for k, v in d.items()}
        return d

    def unflatten_attributes(data):
        if isinstance(data, dict):
            transformed_data = nested_dict()
            keys_to_remove = []
            for key, value in data.items():
                parts = key.split('/')
                if len(parts) == 3 and all(part.isdigit() for part in parts):
                    transformed_data[parts[0]][parts[1]][parts[2]] = value
                    keys_to_remove.append(key)
                else:
                    transformed_data[key] = value
            
            # Remove the original flat keys after adding the nested structure
            for key in keys_to_remove:
                del data[key]

            # Convert defaultdict back to regular dictionary
            return convert_to_regular_dict(transformed_data)
        elif isinstance(data, list):
            if len(data) == 3 and isinstance(data[1], str):
                parts = data[1].split('/')
                if len(parts) == 3 and all(part.isdigit() for part in parts):
                    transformed_data = nested_dict()
                    transformed_data[parts[0]][parts[1]][parts[2]] = data[2]
                    return [data[0], convert_to_regular_dict(transformed_data)]
            return [unflatten_attributes(item) if isinstance(item, (dict, list)) else item for item in data]
        else:
            return data

    def process_json(data):
        if isinstance(data, list):
            return [process_json(item) for item in data]
        elif isinstance(data, dict):
            if 'data' in data:
                data['data'] = unflatten_attributes(data['data'])
            if 'result' in data:
                for result in data['result']:
                    if 'attributes' in result:
                        result['attributes'] = unflatten_attributes(result['attributes'])
            return data
        else:
            return data

    try:
        # Load the input JSON string into a Python object
        data = json.loads(input_json)

        # Process the JSON object
        processed_data = process_json(data)

        # Convert the Python object back to a JSON string
        return json.dumps(processed_data)

    except Exception as e:
        # Return the original JSON string in case of an exception
        return input_json

# Test Data
test1 = '[{"event":"attribute_updated","data":[1,"1/6/0",true]},{"message_id":"107481","result":[{"node_id":1,"date_commissioned":"2024-08-12T19:15:34.402405","last_interview":"2024-08-12T19:15:34.402410","interview_version":6,"available":true,"is_bridge":false,"attributes":{"0/30/0":[],"0/30/65532":0,"0/30/65533":1}}]}]'
test2 = '{"event":"attribute_updated","data":[1,"1/6/0",true]}'
test3 = '{"message_id":"107481","result":[{"node_id":1,"date_commissioned":"2024-08-12T19:15:34.402405","last_interview":"2024-08-12T19:15:34.402410","interview_version":6,"available":true,"is_bridge":false,"attributes":{"0/30/0":[],"0/30/65532":0,"0/30/65533":1}}]}'

test4 = '{"event": "node_event", "data": {"node_id": 1, "endpoint_id": 0, "cluster_id": 52, "event_id": 0, "event_number": 22, "priority": 1, "timestamp": 1724140787624, "timestamp_type": 1, "data": {"id": 110349, "name":"110349", "faultRecording": "VHVlIEF1ZyAyMCAwODo1OTo0NyAyMDI0"}}}'

print(transform_json_data(test1))
print(transform_json_data(test2))
print(transform_json_data(test3))
print(transform_json_data(test4))



exit(1)
import json


jsonString = '{"event": "attribute_updated", "data": [1, "1/6/0", true]}'

jsonObject = json.loads(jsonString)
print(jsonObject)

import jmespath

print(jmespath.search("data|[1]| split(@, '/')", jsonObject))
exit(1)

jsonString = '{"message_id":"2379645","result":[{"node_id":1,"date_commissioned":"2024-08-12T19:15:34.402405","last_interview":"2024-08-12T19:15:34.402410","interview_version":6,"available":true,"is_bridge":false,"attributes":{"0":{"3":{"0":0,"1":2,"65528":[],"65529":[0,64],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":4},"4":{"0":128,"65528":[0,1,2,3],"65529":[0,1,2,3,4,5],"65531":[0,65528,65529,65531,65532,65533],"65532":1,"65533":4},"29":{"0":[{"0":17,"1":1},{"0":22,"1":1}],"1":[3,4,29,30,31,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,62,63,64,65,1029,4294048774],"2":[41],"3":[1,2],"4":[{"0":null,"1":7,"2":0},{"0":null,"1":8,"2":3}],"65528":[],"65529":[],"65531":[0,1,2,3,4,65528,65529,65531,65532,65533],"65532":1,"65533":2},"30":{"0":[],"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"31":{"0":[{"1":5,"2":2,"3":[112233],"4":null,"254":1}],"1":[],"2":4,"3":3,"4":4,"65528":[],"65529":[],"65531":[0,1,2,3,4,65528,65529,65531,65532,65533],"65532":0,"65533":1},"40":{"0":17,"1":"TEST_VENDOR","2":65521,"3":"TEST_PRODUCT","4":32769,"5":"","6":"XX","7":0,"8":"TEST_VERSION","9":1,"10":"1.0","11":"20200101","12":"","13":"","14":"","15":"TEST_SN","16":false,"18":"892345B5B9FA5E40","19":{"0":3,"1":65535},"20":{"0":2,"1":5},"21":16973824,"22":5,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,65528,65529,65531,65532,65533],"65532":0,"65533":3},"42":{"0":[],"1":true,"2":0,"3":0,"65528":[],"65529":[0],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":0,"65533":1},"43":{"0":"en-US","1":["en-US","de-DE","fr-FR","en-GB","es-ES","zh-CN","it-IT","ja-JP"],"65528":[],"65529":[],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":1},"44":{"0":0,"1":0,"2":[0,1,2,3,4,5,6,8,9,10,11,7],"65528":[],"65529":[],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":1,"65533":1},"45":{"0":0,"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":1,"65533":1},"46":{"0":[2,1,0],"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"47":{"0":0,"1":3,"2":"B1","14":0,"15":false,"16":0,"31":[],"65528":[],"65529":[],"65531":[0,1,2,14,15,16,31,65528,65529,65531,65532,65533],"65532":2,"65533":2},"48":{"0":0,"1":{"0":60,"1":900},"2":0,"3":2,"4":true,"65528":[1,3,5],"65529":[0,2,4],"65531":[0,1,2,3,4,65528,65529,65531,65532,65533],"65532":0,"65533":1},"49":{"0":1,"1":[{"0":"ZW5wMHMzMWY2","1":true}],"2":0,"3":0,"4":true,"5":null,"6":null,"7":null,"8":[0],"9":0,"10":0,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":4,"65533":2},"50":{"65528":[1],"65529":[0],"65531":[65528,65529,65531,65532,65533],"65532":0,"65533":1},"51":{"0":[{"0":"docker0","1":false,"2":null,"3":null,"4":"AkLVpu2Z","5":["rBEAAQ=="],"6":[""],"7":0},{"0":"wlp2s0","1":true,"2":null,"3":null,"4":"oMWJxUzo","5":["wKgAAg=="],"6":["/SWs6wutAAB7BiW85DaPWg==","/SWs6wutAAAdza9PvCIKZA==","/oAAAAAAAAAryCXak+KgKQ=="],"7":1},{"0":"enp0s31f6","1":false,"2":null,"3":null,"4":"EGUwGGhx","5":[],"6":[],"7":2},{"0":"lo","1":true,"2":null,"3":null,"4":"AAAAAAAA","5":["fwAAAQ=="],"6":["AAAAAAAAAAAAAAAAAAAAAQ=="],"7":0}],"1":1,"2":98115,"3":27,"4":0,"5":[],"6":[],"7":[],"8":false,"65528":[2,4],"65529":[0,1,3],"65531":[0,1,2,3,4,5,6,7,8,65528,65529,65531,65532,65533],"65532":1,"65533":2},"52":{"0":[{"0":110353,"1":"110353"},{"0":110352,"1":"110352"},{"0":110351,"1":"110351"},{"0":110350,"1":"110350"},{"0":110349,"1":"110349"}],"1":349808,"2":1522064,"3":1522064,"65528":[],"65529":[0],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":1,"65533":1},"53":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":0,"7":[],"8":[],"9":null,"10":null,"11":null,"12":null,"13":null,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":[],"65528":[],"65529":[0],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65528,65529,65531,65532,65533],"65532":15,"65533":2},"54":{"0":"oMWJxUzo","1":null,"2":3,"3":36,"4":-55,"5":0,"6":null,"7":0,"8":0,"9":2497320,"10":686020,"11":780000000,"12":0,"65528":[],"65529":[0],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,65528,65529,65531,65532,65533],"65532":3,"65533":1},"55":{"0":null,"1":false,"2":0,"3":0,"4":0,"5":0,"6":0,"7":null,"8":98115,"65528":[],"65529":[0],"65531":[0,1,2,3,4,5,6,7,8,65528,65529,65531,65532,65533],"65532":3,"65533":1},"56":{"0":777400057770365,"1":3,"2":8,"3":null,"4":null,"5":[{"0":0,"1":0}],"6":[],"7":null,"8":0,"10":2,"11":2,"12":true,"65528":[3],"65529":[0,1,2,4,5],"65531":[0,1,2,3,4,5,6,7,8,10,11,12,65528,65529,65531,65532,65533],"65532":11,"65533":2},"60":{"0":0,"1":null,"2":null,"65528":[],"65529":[0,1,2],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":0,"65533":1},"62":{"0":[{"1":"FTABAQEkAgE3AyQTAhgmBIAigScmBYAlTTo3BiQVASQRARgkBwEkCAEwCUEEMHH6EUPjIOWb37Uaqt7H7IpFweCBiDMwX2VlAmeeoeCjAvUOW49jcofQLFuSRfHh5Kfe7l6D7J3W2fyRspJrETcKNQEoARgkAgE2AwQCBAEYMAQUeeSdFVZCcdNWZeh8D8ZbCs+NABMwBRQd/6XcG8/ioxvEnYjNMyFrAGj4uhgwC0BrgznPMdGbLiIOGoezQzLFs/1zSb8nOxrl+JPUPYwL7h3HGDkJQAAeGoRYZjon95WEUetqSvVEiEaEhjmpq67uGA==","2":"FTABAQEkAgE3AyQUARgmBIAigScmBYAlTTo3BiQTAhgkBwEkCAEwCUEEtI9SPR+zRYVDIMRdScDBqV0b87Hq4I8KUzpiMBkuaxMiMP6qan6FRWogcQQOMZ+DKb+FxAzWqYABb7WLAwNokjcKNQEpARgkAmAwBBQd/6XcG8/ioxvEnYjNMyFrAGj4ujAFFJZOARqrqtsN2rEwALraQTsHKuq8GDALQAZTursrNYj9mghfaiqEKXD8YEy5vp8Kyr4wLuhhZNR+Ja5YTVcaLhvfY5dm0MabM+GJRNE8wDCj8Rmqbz1HCusY","254":1}],"1":[{"1":"BCjyGUm3QTaiCDfgt8sli0gWFz7m7yMPTxbOTpfOeYHMtyVATNuMgsqrGY/aleUhwT3fhEuoj9J58q6O+pBDABY=","2":65521,"3":1,"4":1,"5":"","254":1}],"2":16,"3":1,"4":["FTABAQEkAgE3AyQUARgmBIAigScmBYAlTTo3BiQUARgkBwEkCAEwCUEEKPIZSbdBNqIIN+C3yyWLSBYXPubvIw9PFs5Ol855gcy3JUBM24yCyqsZj9qV5SHBPd+ES6iP0nnyro76kEMAFjcKNQEpARgkAmAwBBSWTgEaq6rbDdqxMAC62kE7ByrqvDAFFJZOARqrqtsN2rEwALraQTsHKuq8GDALQBwrgKkyLt12sOpKbxuKsPN5lwRS6B699iYjv790MyXbVyqXMgP0J+vHqrWvgw6qPL5phjZq2ibHI9RBh2FcSOQY"],"5":1,"65528":[1,3,5,8],"65529":[0,2,4,6,7,9,10,11],"65531":[0,1,2,3,4,5,65528,65529,65531,65532,65533],"65532":0,"65533":1},"63":{"0":[],"1":[],"2":12,"3":3,"65528":[2,5],"65529":[0,1,3,4],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":0,"65533":2},"64":{"0":[{"0":"room","1":"bedroom 2"},{"0":"orientation","1":"North"},{"0":"floor","1":"2"},{"0":"direction","1":"up"}],"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"65":{"0":[],"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"1029":{"0":0,"1":0,"2":10000,"65528":[],"65529":[],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":0,"65533":3},"4294048774":{"65528":[],"65529":[0,1],"65531":[65528,65529,65531,65532,65533],"65532":0,"65533":1}},"1":{"3":{"0":0,"1":2,"65528":[],"65529":[0,64],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":4},"4":{"0":128,"65528":[0,1,2,3],"65529":[0,1,2,3,4,5],"65531":[0,65528,65529,65531,65532,65533],"65532":1,"65533":4},"6":{"0":false,"16384":true,"16385":0,"16386":0,"16387":null,"65528":[],"65529":[0,1,2,64,65,66],"65531":[0,16384,16385,16386,16387,65528,65529,65531,65532,65533],"65532":1,"65533":6},"7":{"0":0,"16":0,"65528":[],"65529":[],"65531":[0,16,65528,65529,65531,65532,65533],"65532":0,"65533":1},"8":{"0":254,"1":0,"2":1,"3":254,"4":0,"5":0,"6":0,"15":0,"16":0,"17":null,"18":0,"19":0,"20":50,"16384":null,"65528":[],"65529":[0,1,2,3,4,5,6,7],"65531":[0,1,2,3,4,5,6,15,16,17,18,19,20,16384,65528,65529,65531,65532,65533],"65532":3,"65533":5},"15":{"81":false,"85":false,"111":0,"65528":[],"65529":[],"65531":[81,85,111,65528,65529,65531,65532,65533],"65532":0,"65533":1},"29":{"0":[{"0":256,"1":1},{"0":17,"1":1}],"1":[3,4,6,7,8,15,29,30,37,47,59,64,65,69,72,73,74,80,81,82,83,84,85,86,87,89,91,92,93,94,96,97,98,113,114,128,129,144,145,152,153,155,156,157,159,258,259,512,513,514,516,768,769,1024,1026,1027,1028,1029,1030,1036,1037,1043,1045,1066,1067,1068,1069,1070,1071,1283,1288,2820,4294048773],"2":[6],"3":[],"4":[{"0":null,"1":7,"2":1},{"0":null,"1":8,"2":0}],"65528":[],"65529":[],"65531":[0,1,2,3,4,65528,65529,65531,65532,65533],"65532":1,"65533":2},"30":{"0":[],"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"37":{"0":[],"1":[],"2":"https://example.com","65528":[],"65529":[],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":0,"65533":1},"47":{"0":0,"1":2,"2":"B2","14":0,"15":false,"16":0,"31":[],"65528":[],"65529":[],"65531":[0,1,2,14,15,16,31,65528,65529,65531,65532,65533],"65532":2,"65533":2},"59":{"0":2,"1":3,"65528":[],"65529":[],"65531":[0,1,65528,65529,65531,65532,65533],"65532":1,"65533":1},"64":{"0":[{"0":"room","1":"bedroom 2"},{"0":"orientation","1":"North"},{"0":"floor","1":"2"},{"0":"direction","1":"up"}],"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"65":{"0":[],"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"69":{"0":false,"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"72":{"0":null,"1":null,"2":null,"3":[{"0":0},{"0":1},{"0":2},{"0":3}],"4":0,"5":{"0":0},"65528":[4],"65529":[0,1,2,3],"65531":[0,1,2,3,4,5,65528,65529,65531,65532,65533],"65532":0,"65533":1},"73":{"0":[{"0":"Bake","1":0,"2":[{"1":16384}]},{"0":"Convection","1":1,"2":[{"1":16385}]},{"0":"Grill","1":2,"2":[{"1":16386}]},{"0":"Roast","1":3,"2":[{"1":16387}]},{"0":"Clean","1":4,"2":[{"1":16388}]},{"0":"Convection Bake","1":5,"2":[{"1":16389}]},{"0":"Convection Roast","1":6,"2":[{"1":16390}]},{"0":"Warming","1":7,"2":[{"1":16391}]},{"0":"Proofing","1":8,"2":[{"1":16392}]}],"1":0,"65528":[1],"65529":[0],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":1},"74":{"0":[0,1,3],"1":0,"65528":[],"65529":[],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":1},"80":{"0":"Coffee","1":0,"2":[{"0":"Black","1":0,"2":[{"0":0,"1":0}]},{"0":"Cappuccino","1":4,"2":[{"0":0,"1":0}]},{"0":"Espresso","1":7,"2":[{"0":0,"1":0}]}],"3":0,"4":0,"5":null,"65528":[],"65529":[0],"65531":[0,1,65528,65529,65531,4293984257,2,3,4,5,65532,65533],"65532":1,"65533":2,"4293984257":255},"81":{"0":[{"0":"Normal","1":0,"2":[{"1":16384}]},{"0":"Delicate","1":1,"2":[{"1":16385},{"1":8},{"1":2}]},{"0":"Heavy","1":2,"2":[{"1":7},{"1":16386}]},{"0":"Whites","1":3,"2":[{"1":16387}]}],"1":0,"2":null,"3":null,"65528":[1],"65529":[0],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":1,"65533":2},"82":{"0":[{"0":"Normal","1":0,"2":[{"1":0}]},{"0":"Rapid Cool","1":1,"2":[{"1":16384}]},{"0":"Rapid Freeze","1":2,"2":[{"1":16385}]}],"1":0,"2":null,"3":null,"65528":[1],"65529":[0],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":1,"65533":2},"83":{"0":["Off","Low","Medium","High"],"1":0,"2":0,"3":[1,2],"65528":[],"65529":[],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":3,"65533":1},"84":{"0":[{"0":"Idle","1":0,"2":[{"1":16384}]},{"0":"Cleaning","1":1,"2":[{"1":16385}]},{"0":"Mapping","1":2,"2":[{"1":16386}]}],"1":0,"65528":[1],"65529":[0],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":2},"85":{"0":[{"0":"Vacuum","1":0,"2":[{"1":16385}]},{"0":"Wash","1":1,"2":[{"1":16386}]},{"0":"Deep clean","1":2,"2":[{"1":7},{"1":16384}]}],"1":0,"65528":[1],"65529":[0],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":2},"86":{"4":0,"5":["Hot","Warm","Freezing"],"65528":[],"65529":[0],"65531":[4,5,65528,65529,65531,65532,65533],"65532":2,"65533":1},"87":{"0":1,"2":0,"3":1,"65528":[],"65529":[],"65531":[0,2,3,65528,65529,65531,65532,65533],"65532":0,"65533":1},"89":{"0":[{"0":"Normal","1":0,"2":[{"1":16384}]},{"0":"Heavy","1":1,"2":[{"1":7},{"1":16385}]},{"0":"Light","1":2,"2":[{"1":16386},{"1":8},{"1":2}]}],"1":0,"2":null,"3":null,"65528":[1],"65529":[0],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":1,"65533":2},"91":{"0":0,"65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":15,"65533":1},"92":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":false,"6":false,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"65528":[],"65529":[0],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,65528,65529,65531,65532,65533],"65532":3,"65533":1},"93":{"0":47,"1":3,"2":7,"3":47,"65528":[],"65529":[0,1],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":1,"65533":1},"94":{"0":[{"0":"Normal","1":0,"2":[{"1":16384}]},{"0":"Defrost","1":1,"2":[{"1":16385}]}],"1":0,"65528":[],"65529":[],"65531":[0,1,65528,65529,65531,65532,65533],"65532":1,"65533":1},"96":{"0":null,"1":null,"2":null,"3":[{"0":0},{"0":1},{"0":2},{"0":3}],"4":0,"5":{"0":0},"65528":[4],"65529":[0,1,2,3],"65531":[0,1,2,3,4,5,65528,65529,65531,65532,65533],"65532":0,"65533":2},"97":{"0":null,"1":null,"2":null,"3":[{"0":0},{"0":1},{"0":2},{"0":3},{"0":64},{"0":65},{"0":66}],"4":0,"5":{"0":0},"65528":[4],"65529":[0,3,128],"65531":[0,1,2,3,4,5,65528,65529,65531,65532,65533],"65532":0,"65533":1},"98":{"0":null,"1":16,"2":[{"0":0,"1":0,"2":0,"3":false,"4":7,"254":1}],"65528":[0,1,2,3,4,6,64],"65529":[0,1,2,3,4,5,6,64],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":1,"65533":1},"113":{"0":100,"1":1,"2":0,"3":true,"4":null,"5":[{"0":0,"1":"111112222233"},{"0":1,"1":"gtin8xxx"},{"0":2,"1":"4444455555666"},{"0":3,"1":"gtin14xxxxxxxx"},{"0":4,"1":"oem20xxxxxxxxxxxxxxx"}],"65528":[],"65529":[0],"65531":[0,1,2,3,4,5,65528,65529,65531,65532,65533],"65532":7,"65533":1},"114":{"0":100,"1":1,"2":0,"3":true,"4":null,"5":[{"0":0,"1":"111112222233"},{"0":1,"1":"gtin8xxx"},{"0":2,"1":"4444455555666"},{"0":3,"1":"gtin14xxxxxxxx"},{"0":4,"1":"oem20xxxxxxxxxxxxxxx"}],"65528":[],"65529":[0],"65531":[0,1,2,3,4,5,65528,65529,65531,65532,65533],"65532":7,"65533":1},"128":{"0":2,"1":3,"2":2,"3":0,"4":0,"5":0,"6":3,"7":0,"65528":[],"65529":[0,1],"65531":[0,1,2,3,4,5,6,7,65528,65529,65531,65532,65533],"65532":15,"65533":1},"129":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":100,"9":0,"10":1,"65528":[],"65529":[0,1],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":3,"65533":1},"144":{"0":2,"1":3,"2":[{"0":5,"1":true,"2":-50000000,"3":50000000,"4":[{"0":-50000000,"1":-10000000,"2":5000,"3":2000,"4":3000},{"0":-9999999,"1":9999999,"2":1000,"3":100,"4":500},{"0":10000000,"1":50000000,"2":5000,"3":2000,"4":3000}]},{"0":2,"1":true,"2":-100000,"3":100000,"4":[{"0":-100000,"1":-5000,"2":5000,"3":2000,"4":3000},{"0":-4999,"1":4999,"2":1000,"3":100,"4":500},{"0":5000,"1":100000,"2":5000,"3":2000,"4":3000}]},{"0":1,"1":true,"2":-500000,"3":500000,"4":[{"0":-500000,"1":-100000,"2":5000,"3":2000,"4":3000},{"0":-99999,"1":99999,"2":1000,"3":100,"4":500},{"0":100000,"1":500000,"2":5000,"3":2000,"4":3000}]}],"3":[],"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":[{"0":1,"1":100000}],"16":[{"0":1,"1":100000}],"17":null,"18":null,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,65528,65529,65531,65532,65533],"65532":31,"65533":1},"145":{"0":{"0":0,"1":false,"2":0,"3":0,"4":[]},"1":null,"2":null,"3":null,"4":null,"5":null,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,65528,65529,65531,65532,65533],"65532":15,"65533":1},"152":{"0":0,"1":false,"2":0,"3":0,"4":0,"5":null,"6":null,"7":0,"65528":[],"65529":[0,1,2,3,4,7],"65531":[0,1,2,3,4,5,6,7,65528,65529,65531,65532,65533],"65532":31,"65533":3},"153":{"0":0,"1":0,"2":0,"3":null,"5":0,"6":6000,"7":0,"9":80000,"10":600,"35":null,"36":null,"37":null,"38":null,"39":null,"64":null,"65":777400057,"66":null,"65528":[0],"65529":[1,2,5,6,7,4],"65531":[0,1,2,3,5,6,7,9,10,35,36,37,38,39,64,65,66,65528,65529,65531,65532,65533],"65532":9,"65533":2},"155":{"0":[{"0":0,"1":"Efficient"},{"0":50},{"0":100,"1":"Comfort"}],"1":0,"2":[2,0],"3":[{"0":0,"1":"1 Minute"},{"0":12,"1":"5 Minutes"},{"0":24,"1":"10 Minutes"}],"4":0,"65528":[],"65529":[],"65531":[0,1,2,3,4,65528,65529,65531,65532,65533],"65532":3,"65533":1},"156":{"0":[],"1":[],"65528":[],"65529":[],"65531":[0,1,65528,65529,65531,65532,65533],"65532":12,"65533":1},"157":{"0":[{"0":"Manual","1":0,"2":[{"1":16384}]},{"0":"Auto-scheduled","1":1,"2":[{"1":16385}]},{"0":"Solar","1":2,"2":[{"1":16386}]},{"0":"Auto-scheduled with Solar charging","1":3,"2":[{"1":16385},{"1":16386}]}],"1":0,"65528":[1],"65529":[0],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":1},"159":{"0":[{"0":"No energy management (forecast only)","1":0,"2":[{"1":16384}]},{"0":"Device optimizes (no local or grid control)","1":1,"2":[{"1":16385}]},{"0":"Optimized within building","1":2,"2":[{"1":16386},{"1":16385}]},{"0":"Optimized for grid","1":3,"2":[{"1":16385},{"1":16387}]},{"0":"Optimized for grid and building","1":4,"2":[{"1":16386},{"1":16385},{"1":16387}]}],"1":0,"65528":[1],"65529":[0],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":1},"258":{"0":8,"1":65535,"2":65535,"3":32767,"4":32767,"5":0,"6":0,"7":27,"8":50,"9":50,"10":0,"11":5000,"12":5000,"13":0,"14":5000,"15":5000,"16":0,"17":65535,"18":0,"19":65535,"23":0,"26":0,"65528":[],"65529":[0,1,2,4,5,7,8],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,26,65528,65529,65531,65532,65533],"65532":23,"65533":5},"259":{"1":0,"2":0,"3":0,"10":0,"65528":[],"65529":[0,1],"65531":[1,2,3,10,65528,65529,65531,65532,65533],"65532":0,"65533":1},"512":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"32":0,"33":0,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20,21,22,23,32,33,65528,65529,65531,65532,65533],"65532":31,"65533":4},"513":{"0":0,"3":700,"4":3000,"5":1600,"6":3200,"17":2600,"18":2000,"21":700,"22":3000,"23":1600,"24":3200,"25":25,"27":4,"28":1,"72":[],"73":[],"74":0,"75":0,"77":null,"78":"","79":"","80":[],"81":[],"82":false,"83":0,"84":0,"85":null,"65528":[],"65529":[0],"65531":[0,3,4,5,6,17,18,21,22,23,24,25,27,28,72,73,74,75,77,78,79,80,81,82,83,84,85,65528,65529,65531,65532,65533],"65532":35,"65533":6},"514":{"0":0,"1":2,"2":0,"3":0,"4":100,"5":0,"6":0,"7":3,"8":0,"9":3,"10":0,"11":0,"65528":[],"65529":[0],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,65528,65529,65531,65532,65533],"65532":63,"65533":4},"516":{"0":0,"1":0,"2":0,"65528":[],"65529":[],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":0,"65533":2},"768":{"0":0,"1":0,"2":0,"3":24939,"4":24701,"5":0,"6":"","7":0,"8":2,"15":0,"16":0,"17":0,"18":0,"19":0,"21":0,"22":0,"23":0,"25":0,"26":0,"27":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"16384":0,"16385":2,"16386":0,"16387":0,"16388":25,"16389":8960,"16390":0,"16394":31,"16395":0,"16396":65279,"16397":0,"16400":0,"65528":[],"65529":[0,1,2,3,4,5,6,7,8,9,10,64,65,66,67,68,71,75,76],"65531":[0,1,2,3,4,5,6,7,8,15,16,17,18,19,21,22,23,25,26,27,32,33,34,36,37,38,40,41,42,48,49,50,51,52,54,55,56,58,59,60,16384,16385,16386,16387,16388,16389,16390,16394,16395,16396,16397,16400,65528,65529,65531,65532,65533],"65532":31,"65533":6},"769":{"0":1,"1":254,"2":0,"16":1,"17":254,"20":0,"21":null,"32":0,"48":"","49":"","50":null,"51":0,"52":0,"53":null,"65528":[],"65529":[],"65531":[0,1,2,16,17,20,21,32,48,49,50,51,52,53,65528,65529,65531,65532,65533],"65532":0,"65533":4},"1024":{"0":0,"1":1,"2":65534,"3":0,"4":null,"65528":[],"65529":[],"65531":[0,1,2,3,4,65528,65529,65531,65532,65533],"65532":0,"65533":3},"1026":{"0":null,"1":null,"2":null,"3":0,"65528":[],"65529":[],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":0,"65533":4},"1027":{"0":0,"1":0,"2":0,"65528":[],"65529":[],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":0,"65533":3},"1028":{"0":5,"1":0,"2":100,"3":0,"65528":[],"65529":[],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":0,"65533":3},"1029":{"0":0,"1":0,"2":10000,"3":0,"65528":[],"65529":[],"65531":[0,1,2,3,65528,65529,65531,65532,65533],"65532":0,"65533":3},"1030":{"0":0,"1":0,"2":1,"65528":[],"65529":[],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":0,"65533":4},"1036":{"0":1,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1037":{"0":2,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1043":{"0":1,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1045":{"0":1,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1066":{"0":1,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1067":{"0":1,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1068":{"0":1,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1069":{"0":1,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1070":{"0":1,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1071":{"0":1,"1":0,"2":1000,"3":1,"4":320,"5":1,"6":320,"7":0,"8":0,"9":0,"10":1,"65528":[],"65529":[],"65531":[0,1,2,3,4,5,6,7,8,9,10,65528,65529,65531,65532,65533],"65532":63,"65533":3},"1283":{"0":"","65528":[],"65529":[],"65531":[0,65528,65529,65531,65532,65533],"65532":0,"65533":1},"1288":{"65528":[],"65529":[0],"65531":[65528,65529,65531,65532,65533],"65532":0,"65533":1},"2820":{"0":0,"772":0,"1285":65535,"1286":32768,"1287":32768,"1288":65535,"1289":65535,"1290":65535,"1291":-1,"1292":-1,"1293":-1,"65528":[],"65529":[],"65531":[0,772,1285,1286,1287,1288,1289,1290,1291,1292,1293,65528,65529,65531,65532,65533],"65532":0,"65533":3},"4294048773":{"0":false,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":"","26":[0,0,0,0],"27":["","","",""],"28":[{"0":0,"1":""},{"0":0,"1":""},{"0":0,"1":""},{"0":0,"1":""}],"29":"","30":"","31":"","32":0,"33":0,"34":0,"35":[{"0":null,"3":null,"6":null,"9":null}],"36":0,"37":{"0":0,"1":false,"2":0,"3":"","4":"","5":0,"6":0,"7":0},"38":70,"39":-20,"40":200,"41":-100,"42":["MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=","MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=","MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=","MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY="],"43":[],"48":false,"49":{"TLVValue":null,"Reason":"InteractionModelError: InvalidDataType (0x8d)"},"50":{"TLVValue":null,"Reason":"InteractionModelError: Failure (0x1)"},"16384":false,"16385":0,"16386":0,"16387":0,"16388":0,"16389":0,"16390":0,"16391":0,"16392":0,"16393":0,"16394":0,"16395":0,"16396":0,"16397":0,"16398":0,"16399":0,"16400":0,"16401":0,"16402":0,"16403":0,"16404":0,"16405":0,"16406":0,"16407":0,"16408":0,"16409":"","16414":"","16420":0,"16421":null,"16422":70,"16423":-20,"16424":200,"16425":-100,"65528":[0,1,4,5,6,8,9,10,11,12,4294049979],"65529":[0,1,2,4,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,4294049962],"65531":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,49,50,16384,16385,16386,16387,16388,16389,16390,16391,16392,16393,16394,16395,16396,16397,16398,16399,16400,16401,16402,16403,16404,16405,16406,16407,16408,16409,16414,16420,16421,16422,16423,16424,16425,16426,65528,65529,65531,4294070017,65532,65533],"65532":0,"65533":1,"4294070017":0}},"2":{"3":{"0":0,"1":0,"65528":[],"65529":[0,64],"65531":[0,1,65528,65529,65531,65532,65533],"65532":0,"65533":4},"4":{"0":128,"65528":[0,1,2,3],"65529":[0,1,2,3,4,5],"65531":[0,65528,65529,65531,65532,65533],"65532":1,"65533":4},"6":{"0":false,"16384":true,"16385":0,"16386":0,"16387":0,"65528":[],"65529":[0,1,2,64,65,66],"65531":[0,16384,16385,16386,16387,65528,65529,65531,65532,65533],"65532":1,"65533":6},"29":{"0":[{"0":256,"1":1},{"0":17,"1":1}],"1":[3,4,6,29,47,98,1030],"2":[],"3":[],"4":[{"0":null,"1":7,"2":2},{"0":null,"1":8,"2":1}],"65528":[],"65529":[],"65531":[0,1,2,3,4,65528,65529,65531,65532,65533],"65532":1,"65533":2},"47":{"0":0,"1":1,"2":"B3","14":0,"15":false,"16":0,"31":[],"65528":[],"65529":[],"65531":[0,1,2,14,15,16,31,65528,65529,65531,65532,65533],"65532":2,"65533":2},"98":{"0":null,"1":16,"2":[],"65528":[0,1,2,3,4,6,64],"65529":[0,1,2,3,4,5,6,64],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":1,"65533":1},"1030":{"0":0,"1":0,"2":1,"65528":[],"65529":[],"65531":[0,1,2,65528,65529,65531,65532,65533],"65532":0,"65533":4}}},"attribute_subscriptions":[]}]}'

jsonObject = json.loads(jsonString)
print(len(jsonObject))




exit(1)
import json
import jmespath

# Input JSON array as a string
json_array_str = '''
[
  {
    "fieldName":"NodeId",
    "fieldDatatype":"Object",
    "fieldValue":"[?node_id == `1`].node_id"
  },
  {
    "fieldName":"ProductName",
    "fieldDatatype":"Object",
    "fieldValue":"[?node_id == `{NodeId}`].attributes.\\"0\\".\\"40\\".\\"3\\""
  },
  {
    "fieldName":"Timestamp",
    "fieldDatatype":"Timestamp",
    "fieldValue":""
  }
]
'''

# Parse the JSON array string into a Python list of dictionaries
json_array = json.loads(json_array_str)

# Initialize an empty dictionary to hold the new JSON object
new_json_object = {}

# First pass: Extract fieldName and fieldValue into new_json_object
for item in json_array:
    # Store the value directly for now
    new_json_object[item['fieldName']] = item['fieldValue']

'''

# Second pass: Replace placeholders with actual values
for item in json_array:
    if '{' in item['fieldValue'] and '}' in item['fieldValue']:
        # Replace placeholders with corresponding values from new_json_object
        for key, value in new_json_object.items():
            placeholder = f'{{{key}}}'
            if placeholder in item['fieldValue']:
                new_json_object[item['fieldName']] = item['fieldValue'].replace(placeholder, value)

# Example: Using the replaced field values in jmespath queries if needed
# Assume you have some data to query
data_to_query = {
    "node_id": 1,
    "attributes": {
        "0": {
            "40": {
                "3": "ProductValue"
            }
        }
    }
}

# Evaluate the jmespath expression for the ProductName field
product_name_query = new_json_object['ProductName']
product_name_value = jmespath.search(product_name_query, data_to_query)

# Update the final JSON object with the evaluated value
new_json_object['ProductName'] = product_name_value
'''

# Convert the final JSON object to a JSON string (if needed)
new_json_object_str = json.dumps(new_json_object, indent=2)

# Output the result
print(new_json_object_str)

exit(1)

import json
from collections import defaultdict

def transform_json_data(input_json):
    def nested_dict():
        return defaultdict(nested_dict)

    # Load the input JSON string into a Python dictionary
    data = json.loads(input_json)
    
    # Create a default dictionary that allows for dynamic creation of nested dictionaries
    transformed_attributes = nested_dict()
    
    # Iterate over the attributes in the input data
    for key, value in data['attributes'].items():
        # Check if the key matches the pattern 'number/number/number'
        parts = key.split('/')
        if len(parts) == 3 and all(part.isdigit() for part in parts):
            # Decompose the key into three parts and insert the value accordingly
            transformed_attributes[parts[0]][parts[1]][parts[2]] = value
        else:
            # Handle other attributes if necessary
            transformed_attributes[key] = value
    
    # Convert the defaultdict back to a regular dictionary
    def convert_to_regular_dict(d):
        if isinstance(d, defaultdict):
            d = {k: convert_to_regular_dict(v) for k, v in d.items()}
        return d
    
    transformed_attributes = convert_to_regular_dict(transformed_attributes)
    
    # Update the original data with the transformed attributes
    data['attributes'] = transformed_attributes
    
    # Convert the Python dictionary back to a JSON string
    return json.dumps(data, indent=2)

# Example usage
input_json = '''
{
    "node_id": 1,
    "is_bridge": false,
    "attributes": {
      "0/3/0": 0,
      "0/3/1": 2,
      "0/3/65532": 0,
      "0/3/65533": 4,
      "0/3/65528": [],
      "0/3/65529": [
        0,
        64
      ],
      "0/3/65531": [
        0,
        1,
        65528,
        65529,
        65531,
        65532,
        65533
      ],
      "0/4/0": 128,
      "0/4/65532": 1,
      "0/4/65533": 4,
      "0/4/65528": [
        0,
        1,
        2,
        3
      ],
      "0/4/65529": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "0/4/65531": [
        0,
        65528,
        65529,
        65531,
        65532,
        65533
      ]
    }
  }
'''

output_json_str = transform_json_data(input_json)
output_json = json.loads(output_json_str)
print("original:")
print(output_json)

import pandas as pd

df = pd.json_normalize(output_json)


print("normalized json:")
print(df.to_json())

print("csvized json:")
print(df.to_csv(path_or_buf="/tmp/ivo.csv"))


exit(1)
import json
import jmespath

# Sample JSON data as a string
json_data = """
[
  {
    "node_id": 1,
    "is_bridge": false,
    "attributes": {
      "0/3/0": 0,
      "0/3/1": 2,
      "0/3/65532": 0,
      "0/3/65533": 4,
      "0/3/65528": [],
      "0/3/65529": [
        0,
        64
      ],
      "0/3/65531": [
        0,
        1,
        65528,
        65529,
        65531,
        65532,
        65533
      ],
      "0/4/0": 128,
      "0/4/65532": 1,
      "0/4/65533": 4,
      "0/4/65528": [
        0,
        1,
        2,
        3
      ],
      "0/4/65529": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "0/4/65531": [
        0,
        65528,
        65529,
        65531,
        65532,
        65533
      ]
    }
  }
]
"""

# Parse the JSON data
data = json.loads(json_data)

#query = "[].attributes | keys(@)[?starts_with(@, '0/3/')] | { join(', ', @): attributes[?keys(attributes)[?starts_with(@, '0/3/')]] }"
query = "[].attributes.keys(@)[?starts_with(@, '0/3/')] | { join(', ', @): attributes[?keys(attributes)[?starts_with(@, '0/3/')]] }"

# Apply the query
result = jmespath.search(query, data)

# Print the result
print(json.dumps(result, indent=2))


exit(1)

# Extract attributes using JMESPath
attributes = jmespath.search("attributes.{keys: keys(@), values: values(@)} | [0].keys[?starts_with(@, '0/40/')].{key: @, value: values[&keys[0] == @]}", data[0])

# Filter keys starting with '0/40'
#filtered_attributes = {k: v for k, v in attributes.items() if k.startswith('0/40')}

# Output the filtered attributes
#print(filtered_attributes)
print(attributes)

exit(1)
message = json.loads('[{"node_id": 1, "date_commissioned": "2024-08-12T19:15:34.402405", "last_interview": "2024-08-12T19:15:34.402410", "interview_version": 6, "available": true, "is_bridge": false, "attributes": {"0/3/0": 0, "0/3/1": 2, "0/3/65532": 0, "0/3/65533": 4, "0/3/65528": [], "0/3/65529": [0, 64], "0/3/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "0/4/0": 128, "0/4/65532": 1, "0/4/65533": 4, "0/4/65528": [0, 1, 2, 3], "0/4/65529": [0, 1, 2, 3, 4, 5], "0/4/65531": [0, 65528, 65529, 65531, 65532, 65533], "0/29/0": [{"0": 17, "1": 1}, {"0": 22, "1": 1}], "0/29/1": [3, 4, 29, 30, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 63, 64, 65, 1029, 4294048774], "0/29/2": [41], "0/29/3": [1, 2], "0/29/4": [{"0": null, "1": 7, "2": 0}, {"0": null, "1": 8, "2": 3}], "0/29/65532": 1, "0/29/65533": 2, "0/29/65528": [], "0/29/65529": [], "0/29/65531": [0, 1, 2, 3, 4, 65528, 65529, 65531, 65532, 65533], "0/30/0": [], "0/30/65532": 0, "0/30/65533": 1, "0/30/65528": [], "0/30/65529": [], "0/30/65531": [0, 65528, 65529, 65531, 65532, 65533], "0/31/0": [{"1": 5, "2": 2, "3": [112233], "4": null, "254": 1}], "0/31/1": [], "0/31/2": 4, "0/31/3": 3, "0/31/4": 4, "0/31/65532": 0, "0/31/65533": 1, "0/31/65528": [], "0/31/65529": [], "0/31/65531": [0, 1, 2, 3, 4, 65528, 65529, 65531, 65532, 65533], "0/40/0": 17, "0/40/1": "TEST_VENDOR", "0/40/2": 65521, "0/40/3": "TEST_PRODUCT", "0/40/4": 32769, "0/40/5": "", "0/40/6": "XX", "0/40/7": 0, "0/40/8": "TEST_VERSION", "0/40/9": 1, "0/40/10": "1.0", "0/40/11": "20200101", "0/40/12": "", "0/40/13": "", "0/40/14": "", "0/40/15": "TEST_SN", "0/40/16": false, "0/40/18": "892345B5B9FA5E40", "0/40/19": {"0": 3, "1": 65535}, "0/40/20": {"0": 2, "1": 5}, "0/40/21": 16973824, "0/40/22": 5, "0/40/65532": 0, "0/40/65533": 3, "0/40/65528": [], "0/40/65529": [], "0/40/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 65528, 65529, 65531, 65532, 65533], "0/42/0": [], "0/42/1": true, "0/42/2": 0, "0/42/3": 0, "0/42/65532": 0, "0/42/65533": 1, "0/42/65528": [], "0/42/65529": [0], "0/42/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "0/43/0": "en-US", "0/43/1": ["en-US", "de-DE", "fr-FR", "en-GB", "es-ES", "zh-CN", "it-IT", "ja-JP"], "0/43/65532": 0, "0/43/65533": 1, "0/43/65528": [], "0/43/65529": [], "0/43/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "0/44/0": 0, "0/44/1": 0, "0/44/2": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 7], "0/44/65532": 1, "0/44/65533": 1, "0/44/65528": [], "0/44/65529": [], "0/44/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533], "0/45/0": 0, "0/45/65532": 1, "0/45/65533": 1, "0/45/65528": [], "0/45/65529": [], "0/45/65531": [0, 65528, 65529, 65531, 65532, 65533], "0/46/0": [2, 1, 0], "0/46/65532": 0, "0/46/65533": 1, "0/46/65528": [], "0/46/65529": [], "0/46/65531": [0, 65528, 65529, 65531, 65532, 65533], "0/47/0": 0, "0/47/1": 3, "0/47/2": "B1", "0/47/14": 0, "0/47/15": false, "0/47/16": 0, "0/47/31": [], "0/47/65532": 2, "0/47/65533": 2, "0/47/65528": [], "0/47/65529": [], "0/47/65531": [0, 1, 2, 14, 15, 16, 31, 65528, 65529, 65531, 65532, 65533], "0/48/0": 0, "0/48/1": {"0": 60, "1": 900}, "0/48/2": 0, "0/48/3": 2, "0/48/4": true, "0/48/65532": 0, "0/48/65533": 1, "0/48/65528": [1, 3, 5], "0/48/65529": [0, 2, 4], "0/48/65531": [0, 1, 2, 3, 4, 65528, 65529, 65531, 65532, 65533], "0/49/0": 1, "0/49/1": [{"0": "ZW5wMHMzMWY2", "1": true}], "0/49/2": 0, "0/49/3": 0, "0/49/4": true, "0/49/5": null, "0/49/6": null, "0/49/7": null, "0/49/8": [0], "0/49/9": 0, "0/49/10": 0, "0/49/65532": 4, "0/49/65533": 2, "0/49/65528": [], "0/49/65529": [], "0/49/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "0/50/65532": 0, "0/50/65533": 1, "0/50/65528": [1], "0/50/65529": [0], "0/50/65531": [65528, 65529, 65531, 65532, 65533], "0/51/0": [{"0": "docker0", "1": false, "2": null, "3": null, "4": "AkLVpu2Z", "5": ["rBEAAQ=="], "6": [""], "7": 0}, {"0": "wlp2s0", "1": true, "2": null, "3": null, "4": "oMWJxUzo", "5": ["wKgBLQ=="], "6": ["IAELtka1bAD8LUj2+DOsxg==", "IAELtka1bABjTdxSMQZYGw==", "/oAAAAAAAACW78Qctu53OA=="], "7": 1}, {"0": "enp0s31f6", "1": false, "2": null, "3": null, "4": "EGUwGGhx", "5": [], "6": [], "7": 2}, {"0": "lo", "1": true, "2": null, "3": null, "4": "AAAAAAAA", "5": ["fwAAAQ=="], "6": ["AAAAAAAAAAAAAAAAAAAAAQ=="], "7": 0}], "0/51/1": 1, "0/51/2": 13, "0/51/3": 0, "0/51/4": 0, "0/51/5": [], "0/51/6": [], "0/51/7": [], "0/51/8": false, "0/51/65532": 1, "0/51/65533": 2, "0/51/65528": [2, 4], "0/51/65529": [0, 1, 3], "0/51/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 65528, 65529, 65531, 65532, 65533], "0/52/0": [{"0": 110353, "1": "110353"}, {"0": 110352, "1": "110352"}, {"0": 110351, "1": "110351"}, {"0": 110350, "1": "110350"}, {"0": 110349, "1": "110349"}], "0/52/1": 334736, "0/52/2": 1303664, "0/52/3": 1303664, "0/52/65532": 1, "0/52/65533": 1, "0/52/65528": [], "0/52/65529": [0], "0/52/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "0/53/0": null, "0/53/1": null, "0/53/2": null, "0/53/3": null, "0/53/4": null, "0/53/5": null, "0/53/6": 0, "0/53/7": [], "0/53/8": [], "0/53/9": null, "0/53/10": null, "0/53/11": null, "0/53/12": null, "0/53/13": null, "0/53/14": 0, "0/53/15": 0, "0/53/16": 0, "0/53/17": 0, "0/53/18": 0, "0/53/19": 0, "0/53/20": 0, "0/53/21": 0, "0/53/22": 0, "0/53/23": 0, "0/53/24": 0, "0/53/25": 0, "0/53/26": 0, "0/53/27": 0, "0/53/28": 0, "0/53/29": 0, "0/53/30": 0, "0/53/31": 0, "0/53/32": 0, "0/53/33": 0, "0/53/34": 0, "0/53/35": 0, "0/53/36": 0, "0/53/37": 0, "0/53/38": 0, "0/53/39": 0, "0/53/40": 0, "0/53/41": 0, "0/53/42": 0, "0/53/43": 0, "0/53/44": 0, "0/53/45": 0, "0/53/46": 0, "0/53/47": 0, "0/53/48": 0, "0/53/49": 0, "0/53/50": 0, "0/53/51": 0, "0/53/52": 0, "0/53/53": 0, "0/53/54": 0, "0/53/55": 0, "0/53/56": null, "0/53/57": null, "0/53/58": null, "0/53/59": null, "0/53/60": null, "0/53/61": null, "0/53/62": [], "0/53/65532": 15, "0/53/65533": 2, "0/53/65528": [], "0/53/65529": [0], "0/53/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65528, 65529, 65531, 65532, 65533], "0/54/0": "oMWJxUzo", "0/54/1": null, "0/54/2": 3, "0/54/3": 52, "0/54/4": -54, "0/54/5": 0, "0/54/6": null, "0/54/7": 0, "0/54/8": 0, "0/54/9": 56, "0/54/10": 32, "0/54/11": 866700000, "0/54/12": 0, "0/54/65532": 3, "0/54/65533": 1, "0/54/65528": [], "0/54/65529": [0], "0/54/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 65528, 65529, 65531, 65532, 65533], "0/55/0": null, "0/55/1": false, "0/55/2": 0, "0/55/3": 0, "0/55/4": 0, "0/55/5": 0, "0/55/6": 0, "0/55/7": null, "0/55/8": 13, "0/55/65532": 3, "0/55/65533": 1, "0/55/65528": [], "0/55/65529": [0], "0/55/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 65528, 65529, 65531, 65532, 65533], "0/56/0": 776805334492916, "0/56/1": 3, "0/56/2": 8, "0/56/3": null, "0/56/4": null, "0/56/5": [{"0": 0, "1": 0}], "0/56/6": [], "0/56/7": null, "0/56/8": 0, "0/56/10": 2, "0/56/11": 2, "0/56/12": true, "0/56/65532": 11, "0/56/65533": 2, "0/56/65528": [3], "0/56/65529": [0, 1, 2, 4, 5], "0/56/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 65528, 65529, 65531, 65532, 65533], "0/60/0": 0, "0/60/1": null, "0/60/2": null, "0/60/65532": 0, "0/60/65533": 1, "0/60/65528": [], "0/60/65529": [0, 1, 2], "0/60/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533], "0/62/0": [{"1": "FTABAQEkAgE3AyQTAhgmBIAigScmBYAlTTo3BiQVASQRARgkBwEkCAEwCUEEMHH6EUPjIOWb37Uaqt7H7IpFweCBiDMwX2VlAmeeoeCjAvUOW49jcofQLFuSRfHh5Kfe7l6D7J3W2fyRspJrETcKNQEoARgkAgE2AwQCBAEYMAQUeeSdFVZCcdNWZeh8D8ZbCs+NABMwBRQd/6XcG8/ioxvEnYjNMyFrAGj4uhgwC0BrgznPMdGbLiIOGoezQzLFs/1zSb8nOxrl+JPUPYwL7h3HGDkJQAAeGoRYZjon95WEUetqSvVEiEaEhjmpq67uGA==", "2": "FTABAQEkAgE3AyQUARgmBIAigScmBYAlTTo3BiQTAhgkBwEkCAEwCUEEtI9SPR+zRYVDIMRdScDBqV0b87Hq4I8KUzpiMBkuaxMiMP6qan6FRWogcQQOMZ+DKb+FxAzWqYABb7WLAwNokjcKNQEpARgkAmAwBBQd/6XcG8/ioxvEnYjNMyFrAGj4ujAFFJZOARqrqtsN2rEwALraQTsHKuq8GDALQAZTursrNYj9mghfaiqEKXD8YEy5vp8Kyr4wLuhhZNR+Ja5YTVcaLhvfY5dm0MabM+GJRNE8wDCj8Rmqbz1HCusY", "254": 1}], "0/62/1": [{"1": "BCjyGUm3QTaiCDfgt8sli0gWFz7m7yMPTxbOTpfOeYHMtyVATNuMgsqrGY/aleUhwT3fhEuoj9J58q6O+pBDABY=", "2": 65521, "3": 1, "4": 1, "5": "", "254": 1}], "0/62/2": 16, "0/62/3": 1, "0/62/4": ["FTABAQEkAgE3AyQUARgmBIAigScmBYAlTTo3BiQUARgkBwEkCAEwCUEEKPIZSbdBNqIIN+C3yyWLSBYXPubvIw9PFs5Ol855gcy3JUBM24yCyqsZj9qV5SHBPd+ES6iP0nnyro76kEMAFjcKNQEpARgkAmAwBBSWTgEaq6rbDdqxMAC62kE7ByrqvDAFFJZOARqrqtsN2rEwALraQTsHKuq8GDALQBwrgKkyLt12sOpKbxuKsPN5lwRS6B699iYjv790MyXbVyqXMgP0J+vHqrWvgw6qPL5phjZq2ibHI9RBh2FcSOQY"], "0/62/5": 1, "0/62/65532": 0, "0/62/65533": 1, "0/62/65528": [1, 3, 5, 8], "0/62/65529": [0, 2, 4, 6, 7, 9, 10, 11], "0/62/65531": [0, 1, 2, 3, 4, 5, 65528, 65529, 65531, 65532, 65533], "0/63/0": [], "0/63/1": [], "0/63/2": 12, "0/63/3": 3, "0/63/65532": 0, "0/63/65533": 2, "0/63/65528": [2, 5], "0/63/65529": [0, 1, 3, 4], "0/63/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "0/64/0": [{"0": "room", "1": "bedroom 2"}, {"0": "orientation", "1": "North"}, {"0": "floor", "1": "2"}, {"0": "direction", "1": "up"}], "0/64/65532": 0, "0/64/65533": 1, "0/64/65528": [], "0/64/65529": [], "0/64/65531": [0, 65528, 65529, 65531, 65532, 65533], "0/65/0": [], "0/65/65532": 0, "0/65/65533": 1, "0/65/65528": [], "0/65/65529": [], "0/65/65531": [0, 65528, 65529, 65531, 65532, 65533], "0/1029/0": 0, "0/1029/1": 0, "0/1029/2": 10000, "0/1029/65532": 0, "0/1029/65533": 3, "0/1029/65528": [], "0/1029/65529": [], "0/1029/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533], "0/4294048774/65532": 0, "0/4294048774/65533": 1, "0/4294048774/65528": [], "0/4294048774/65529": [0, 1], "0/4294048774/65531": [65528, 65529, 65531, 65532, 65533], "1/3/0": 0, "1/3/1": 2, "1/3/65532": 0, "1/3/65533": 4, "1/3/65528": [], "1/3/65529": [0, 64], "1/3/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/4/0": 128, "1/4/65532": 1, "1/4/65533": 4, "1/4/65528": [0, 1, 2, 3], "1/4/65529": [0, 1, 2, 3, 4, 5], "1/4/65531": [0, 65528, 65529, 65531, 65532, 65533], "1/6/0": false, "1/6/16384": true, "1/6/16385": 0, "1/6/16386": 0, "1/6/16387": null, "1/6/65532": 1, "1/6/65533": 6, "1/6/65528": [], "1/6/65529": [0, 1, 2, 64, 65, 66], "1/6/65531": [0, 16384, 16385, 16386, 16387, 65528, 65529, 65531, 65532, 65533], "1/7/0": 0, "1/7/16": 0, "1/7/65532": 0, "1/7/65533": 1, "1/7/65528": [], "1/7/65529": [], "1/7/65531": [0, 16, 65528, 65529, 65531, 65532, 65533], "1/8/0": 254, "1/8/1": 0, "1/8/2": 1, "1/8/3": 254, "1/8/4": 0, "1/8/5": 0, "1/8/6": 0, "1/8/15": 0, "1/8/16": 0, "1/8/17": null, "1/8/18": 0, "1/8/19": 0, "1/8/20": 50, "1/8/16384": null, "1/8/65532": 3, "1/8/65533": 5, "1/8/65528": [], "1/8/65529": [0, 1, 2, 3, 4, 5, 6, 7], "1/8/65531": [0, 1, 2, 3, 4, 5, 6, 15, 16, 17, 18, 19, 20, 16384, 65528, 65529, 65531, 65532, 65533], "1/15/81": false, "1/15/85": false, "1/15/111": 0, "1/15/65532": 0, "1/15/65533": 1, "1/15/65528": [], "1/15/65529": [], "1/15/65531": [81, 85, 111, 65528, 65529, 65531, 65532, 65533], "1/29/0": [{"0": 256, "1": 1}, {"0": 17, "1": 1}], "1/29/1": [3, 4, 6, 7, 8, 15, 29, 30, 37, 47, 59, 64, 65, 69, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 96, 97, 98, 113, 114, 128, 129, 144, 145, 152, 153, 155, 156, 157, 159, 258, 259, 512, 513, 514, 516, 768, 769, 1024, 1026, 1027, 1028, 1029, 1030, 1036, 1037, 1043, 1045, 1066, 1067, 1068, 1069, 1070, 1071, 1283, 1288, 2820, 4294048773], "1/29/2": [6], "1/29/3": [], "1/29/4": [{"0": null, "1": 7, "2": 1}, {"0": null, "1": 8, "2": 0}], "1/29/65532": 1, "1/29/65533": 2, "1/29/65528": [], "1/29/65529": [], "1/29/65531": [0, 1, 2, 3, 4, 65528, 65529, 65531, 65532, 65533], "1/30/0": [], "1/30/65532": 0, "1/30/65533": 1, "1/30/65528": [], "1/30/65529": [], "1/30/65531": [0, 65528, 65529, 65531, 65532, 65533], "1/37/0": [], "1/37/1": [], "1/37/2": "https://example.com", "1/37/65532": 0, "1/37/65533": 1, "1/37/65528": [], "1/37/65529": [], "1/37/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533], "1/47/0": 0, "1/47/1": 2, "1/47/2": "B2", "1/47/14": 0, "1/47/15": false, "1/47/16": 0, "1/47/31": [], "1/47/65532": 2, "1/47/65533": 2, "1/47/65528": [], "1/47/65529": [], "1/47/65531": [0, 1, 2, 14, 15, 16, 31, 65528, 65529, 65531, 65532, 65533], "1/59/0": 2, "1/59/1": 3, "1/59/65532": 1, "1/59/65533": 1, "1/59/65528": [], "1/59/65529": [], "1/59/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/64/0": [{"0": "room", "1": "bedroom 2"}, {"0": "orientation", "1": "North"}, {"0": "floor", "1": "2"}, {"0": "direction", "1": "up"}], "1/64/65532": 0, "1/64/65533": 1, "1/64/65528": [], "1/64/65529": [], "1/64/65531": [0, 65528, 65529, 65531, 65532, 65533], "1/65/0": [], "1/65/65532": 0, "1/65/65533": 1, "1/65/65528": [], "1/65/65529": [], "1/65/65531": [0, 65528, 65529, 65531, 65532, 65533], "1/69/0": false, "1/69/65532": 0, "1/69/65533": 1, "1/69/65528": [], "1/69/65529": [], "1/69/65531": [0, 65528, 65529, 65531, 65532, 65533], "1/72/0": null, "1/72/1": null, "1/72/2": null, "1/72/3": [{"0": 0}, {"0": 1}, {"0": 2}, {"0": 3}], "1/72/4": 0, "1/72/5": {"0": 0}, "1/72/65532": 0, "1/72/65533": 1, "1/72/65528": [4], "1/72/65529": [0, 1, 2, 3], "1/72/65531": [0, 1, 2, 3, 4, 5, 65528, 65529, 65531, 65532, 65533], "1/73/0": [{"0": "Bake", "1": 0, "2": [{"1": 16384}]}, {"0": "Convection", "1": 1, "2": [{"1": 16385}]}, {"0": "Grill", "1": 2, "2": [{"1": 16386}]}, {"0": "Roast", "1": 3, "2": [{"1": 16387}]}, {"0": "Clean", "1": 4, "2": [{"1": 16388}]}, {"0": "Convection Bake", "1": 5, "2": [{"1": 16389}]}, {"0": "Convection Roast", "1": 6, "2": [{"1": 16390}]}, {"0": "Warming", "1": 7, "2": [{"1": 16391}]}, {"0": "Proofing", "1": 8, "2": [{"1": 16392}]}], "1/73/1": 0, "1/73/65532": 0, "1/73/65533": 1, "1/73/65528": [1], "1/73/65529": [0], "1/73/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/74/0": [0, 1, 3], "1/74/1": 0, "1/74/65532": 0, "1/74/65533": 1, "1/74/65528": [], "1/74/65529": [], "1/74/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/80/0": "Coffee", "1/80/1": 0, "1/80/4293984257": 255, "1/80/2": [{"0": "Black", "1": 0, "2": [{"0": 0, "1": 0}]}, {"0": "Cappuccino", "1": 4, "2": [{"0": 0, "1": 0}]}, {"0": "Espresso", "1": 7, "2": [{"0": 0, "1": 0}]}], "1/80/3": 0, "1/80/4": 0, "1/80/5": null, "1/80/65532": 1, "1/80/65533": 2, "1/80/65528": [], "1/80/65529": [0], "1/80/65531": [0, 1, 65528, 65529, 65531, 4293984257, 2, 3, 4, 5, 65532, 65533], "1/81/0": [{"0": "Normal", "1": 0, "2": [{"1": 16384}]}, {"0": "Delicate", "1": 1, "2": [{"1": 16385}, {"1": 8}, {"1": 2}]}, {"0": "Heavy", "1": 2, "2": [{"1": 7}, {"1": 16386}]}, {"0": "Whites", "1": 3, "2": [{"1": 16387}]}], "1/81/1": 0, "1/81/2": null, "1/81/3": null, "1/81/65532": 1, "1/81/65533": 2, "1/81/65528": [1], "1/81/65529": [0], "1/81/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "1/82/0": [{"0": "Normal", "1": 0, "2": [{"1": 0}]}, {"0": "Rapid Cool", "1": 1, "2": [{"1": 16384}]}, {"0": "Rapid Freeze", "1": 2, "2": [{"1": 16385}]}], "1/82/1": 0, "1/82/2": null, "1/82/3": null, "1/82/65532": 1, "1/82/65533": 2, "1/82/65528": [1], "1/82/65529": [0], "1/82/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "1/83/0": ["Off", "Low", "Medium", "High"], "1/83/1": 0, "1/83/2": 0, "1/83/3": [1, 2], "1/83/65532": 3, "1/83/65533": 1, "1/83/65528": [], "1/83/65529": [], "1/83/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "1/84/0": [{"0": "Idle", "1": 0, "2": [{"1": 16384}]}, {"0": "Cleaning", "1": 1, "2": [{"1": 16385}]}, {"0": "Mapping", "1": 2, "2": [{"1": 16386}]}], "1/84/1": 0, "1/84/65532": 0, "1/84/65533": 2, "1/84/65528": [1], "1/84/65529": [0], "1/84/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/85/0": [{"0": "Vacuum", "1": 0, "2": [{"1": 16385}]}, {"0": "Wash", "1": 1, "2": [{"1": 16386}]}, {"0": "Deep clean", "1": 2, "2": [{"1": 7}, {"1": 16384}]}], "1/85/1": 0, "1/85/65532": 0, "1/85/65533": 2, "1/85/65528": [1], "1/85/65529": [0], "1/85/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/86/4": 0, "1/86/5": ["Hot", "Warm", "Freezing"], "1/86/65532": 2, "1/86/65533": 1, "1/86/65528": [], "1/86/65529": [0], "1/86/65531": [4, 5, 65528, 65529, 65531, 65532, 65533], "1/87/0": 1, "1/87/2": 0, "1/87/3": 1, "1/87/65532": 0, "1/87/65533": 1, "1/87/65528": [], "1/87/65529": [], "1/87/65531": [0, 2, 3, 65528, 65529, 65531, 65532, 65533], "1/89/0": [{"0": "Normal", "1": 0, "2": [{"1": 16384}]}, {"0": "Heavy", "1": 1, "2": [{"1": 7}, {"1": 16385}]}, {"0": "Light", "1": 2, "2": [{"1": 16386}, {"1": 8}, {"1": 2}]}], "1/89/1": 0, "1/89/2": null, "1/89/3": null, "1/89/65532": 1, "1/89/65533": 2, "1/89/65528": [1], "1/89/65529": [0], "1/89/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "1/91/0": 0, "1/91/65532": 15, "1/91/65533": 1, "1/91/65528": [], "1/91/65529": [], "1/91/65531": [0, 65528, 65529, 65531, 65532, 65533], "1/92/0": 0, "1/92/1": 0, "1/92/2": 0, "1/92/3": 0, "1/92/4": 0, "1/92/5": false, "1/92/6": false, "1/92/7": 0, "1/92/8": 0, "1/92/9": 0, "1/92/10": 0, "1/92/11": 1, "1/92/12": 0, "1/92/65532": 3, "1/92/65533": 1, "1/92/65528": [], "1/92/65529": [0], "1/92/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 65528, 65529, 65531, 65532, 65533], "1/93/0": 47, "1/93/1": 3, "1/93/2": 7, "1/93/3": 47, "1/93/65532": 1, "1/93/65533": 1, "1/93/65528": [], "1/93/65529": [0, 1], "1/93/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "1/94/0": [{"0": "Normal", "1": 0, "2": [{"1": 16384}]}, {"0": "Defrost", "1": 1, "2": [{"1": 16385}]}], "1/94/1": 0, "1/94/65532": 1, "1/94/65533": 1, "1/94/65528": [], "1/94/65529": [], "1/94/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/96/0": null, "1/96/1": null, "1/96/2": null, "1/96/3": [{"0": 0}, {"0": 1}, {"0": 2}, {"0": 3}], "1/96/4": 0, "1/96/5": {"0": 0}, "1/96/65532": 0, "1/96/65533": 2, "1/96/65528": [4], "1/96/65529": [0, 1, 2, 3], "1/96/65531": [0, 1, 2, 3, 4, 5, 65528, 65529, 65531, 65532, 65533], "1/97/0": null, "1/97/1": null, "1/97/2": null, "1/97/3": [{"0": 0}, {"0": 1}, {"0": 2}, {"0": 3}, {"0": 64}, {"0": 65}, {"0": 66}], "1/97/4": 0, "1/97/5": {"0": 0}, "1/97/65532": 0, "1/97/65533": 1, "1/97/65528": [4], "1/97/65529": [0, 3, 128], "1/97/65531": [0, 1, 2, 3, 4, 5, 65528, 65529, 65531, 65532, 65533], "1/98/0": null, "1/98/1": 16, "1/98/2": [{"0": 0, "1": 0, "2": 0, "3": false, "4": 7, "254": 1}], "1/98/65532": 1, "1/98/65533": 1, "1/98/65528": [0, 1, 2, 3, 4, 6, 64], "1/98/65529": [0, 1, 2, 3, 4, 5, 6, 64], "1/98/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533], "1/113/0": 100, "1/113/1": 1, "1/113/2": 0, "1/113/3": true, "1/113/4": null, "1/113/5": [{"0": 0, "1": "111112222233"}, {"0": 1, "1": "gtin8xxx"}, {"0": 2, "1": "4444455555666"}, {"0": 3, "1": "gtin14xxxxxxxx"}, {"0": 4, "1": "oem20xxxxxxxxxxxxxxx"}], "1/113/65532": 7, "1/113/65533": 1, "1/113/65528": [], "1/113/65529": [0], "1/113/65531": [0, 1, 2, 3, 4, 5, 65528, 65529, 65531, 65532, 65533], "1/114/0": 100, "1/114/1": 1, "1/114/2": 0, "1/114/3": true, "1/114/4": null, "1/114/5": [{"0": 0, "1": "111112222233"}, {"0": 1, "1": "gtin8xxx"}, {"0": 2, "1": "4444455555666"}, {"0": 3, "1": "gtin14xxxxxxxx"}, {"0": 4, "1": "oem20xxxxxxxxxxxxxxx"}], "1/114/65532": 7, "1/114/65533": 1, "1/114/65528": [], "1/114/65529": [0], "1/114/65531": [0, 1, 2, 3, 4, 5, 65528, 65529, 65531, 65532, 65533], "1/128/0": 2, "1/128/1": 3, "1/128/2": 2, "1/128/3": 0, "1/128/4": 0, "1/128/5": 0, "1/128/6": 3, "1/128/7": 0, "1/128/65532": 15, "1/128/65533": 1, "1/128/65528": [], "1/128/65529": [0, 1], "1/128/65531": [0, 1, 2, 3, 4, 5, 6, 7, 65528, 65529, 65531, 65532, 65533], "1/129/0": null, "1/129/1": null, "1/129/2": null, "1/129/3": null, "1/129/4": null, "1/129/5": null, "1/129/6": null, "1/129/7": null, "1/129/8": 100, "1/129/9": 0, "1/129/10": 1, "1/129/65532": 3, "1/129/65533": 1, "1/129/65528": [], "1/129/65529": [0, 1], "1/129/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/144/0": 2, "1/144/1": 3, "1/144/2": [{"0": 5, "1": true, "2": -50000000, "3": 50000000, "4": [{"0": -50000000, "1": -10000000, "2": 5000, "3": 2000, "4": 3000}, {"0": -9999999, "1": 9999999, "2": 1000, "3": 100, "4": 500}, {"0": 10000000, "1": 50000000, "2": 5000, "3": 2000, "4": 3000}]}, {"0": 2, "1": true, "2": -100000, "3": 100000, "4": [{"0": -100000, "1": -5000, "2": 5000, "3": 2000, "4": 3000}, {"0": -4999, "1": 4999, "2": 1000, "3": 100, "4": 500}, {"0": 5000, "1": 100000, "2": 5000, "3": 2000, "4": 3000}]}, {"0": 1, "1": true, "2": -500000, "3": 500000, "4": [{"0": -500000, "1": -100000, "2": 5000, "3": 2000, "4": 3000}, {"0": -99999, "1": 99999, "2": 1000, "3": 100, "4": 500}, {"0": 100000, "1": 500000, "2": 5000, "3": 2000, "4": 3000}]}], "1/144/3": [], "1/144/4": null, "1/144/5": null, "1/144/6": null, "1/144/7": null, "1/144/8": null, "1/144/9": null, "1/144/10": null, "1/144/11": null, "1/144/12": null, "1/144/13": null, "1/144/14": null, "1/144/15": [{"0": 1, "1": 100000}], "1/144/16": [{"0": 1, "1": 100000}], "1/144/17": null, "1/144/18": null, "1/144/65532": 31, "1/144/65533": 1, "1/144/65528": [], "1/144/65529": [], "1/144/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 65528, 65529, 65531, 65532, 65533], "1/145/0": {"0": 0, "1": false, "2": 0, "3": 0, "4": []}, "1/145/1": null, "1/145/2": null, "1/145/3": null, "1/145/4": null, "1/145/5": null, "1/145/65532": 15, "1/145/65533": 1, "1/145/65528": [], "1/145/65529": [], "1/145/65531": [0, 1, 2, 3, 4, 5, 65528, 65529, 65531, 65532, 65533], "1/152/0": 0, "1/152/1": false, "1/152/2": 0, "1/152/3": 0, "1/152/4": 0, "1/152/5": null, "1/152/6": null, "1/152/7": 0, "1/152/65532": 31, "1/152/65533": 3, "1/152/65528": [], "1/152/65529": [0, 1, 2, 3, 4, 7], "1/152/65531": [0, 1, 2, 3, 4, 5, 6, 7, 65528, 65529, 65531, 65532, 65533], "1/153/0": 0, "1/153/1": 0, "1/153/2": 0, "1/153/3": null, "1/153/5": 0, "1/153/6": 6000, "1/153/7": 0, "1/153/9": 80000, "1/153/10": 600, "1/153/35": null, "1/153/36": null, "1/153/37": null, "1/153/38": null, "1/153/39": null, "1/153/64": null, "1/153/65": 776805334, "1/153/66": null, "1/153/65532": 9, "1/153/65533": 2, "1/153/65528": [0], "1/153/65529": [1, 2, 5, 6, 7, 4], "1/153/65531": [0, 1, 2, 3, 5, 6, 7, 9, 10, 35, 36, 37, 38, 39, 64, 65, 66, 65528, 65529, 65531, 65532, 65533], "1/155/0": [{"0": 0, "1": "Efficient"}, {"0": 50}, {"0": 100, "1": "Comfort"}], "1/155/1": 0, "1/155/2": [2, 0], "1/155/3": [{"0": 0, "1": "1 Minute"}, {"0": 12, "1": "5 Minutes"}, {"0": 24, "1": "10 Minutes"}], "1/155/4": 0, "1/155/65532": 3, "1/155/65533": 1, "1/155/65528": [], "1/155/65529": [], "1/155/65531": [0, 1, 2, 3, 4, 65528, 65529, 65531, 65532, 65533], "1/156/0": [], "1/156/1": [], "1/156/65532": 12, "1/156/65533": 1, "1/156/65528": [], "1/156/65529": [], "1/156/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/157/0": [{"0": "Manual", "1": 0, "2": [{"1": 16384}]}, {"0": "Auto-scheduled", "1": 1, "2": [{"1": 16385}]}, {"0": "Solar", "1": 2, "2": [{"1": 16386}]}, {"0": "Auto-scheduled with Solar charging", "1": 3, "2": [{"1": 16385}, {"1": 16386}]}], "1/157/1": 0, "1/157/65532": 0, "1/157/65533": 1, "1/157/65528": [1], "1/157/65529": [0], "1/157/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/159/0": [{"0": "No energy management (forecast only)", "1": 0, "2": [{"1": 16384}]}, {"0": "Device optimizes (no local or grid control)", "1": 1, "2": [{"1": 16385}]}, {"0": "Optimized within building", "1": 2, "2": [{"1": 16386}, {"1": 16385}]}, {"0": "Optimized for grid", "1": 3, "2": [{"1": 16385}, {"1": 16387}]}, {"0": "Optimized for grid and building", "1": 4, "2": [{"1": 16386}, {"1": 16385}, {"1": 16387}]}], "1/159/1": 0, "1/159/65532": 0, "1/159/65533": 1, "1/159/65528": [1], "1/159/65529": [0], "1/159/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "1/258/0": 8, "1/258/1": 65535, "1/258/2": 65535, "1/258/3": 32767, "1/258/4": 32767, "1/258/5": 0, "1/258/6": 0, "1/258/7": 27, "1/258/8": 50, "1/258/9": 50, "1/258/10": 0, "1/258/11": 5000, "1/258/12": 5000, "1/258/13": 0, "1/258/14": 5000, "1/258/15": 5000, "1/258/16": 0, "1/258/17": 65535, "1/258/18": 0, "1/258/19": 65535, "1/258/23": 0, "1/258/26": 0, "1/258/65532": 23, "1/258/65533": 5, "1/258/65528": [], "1/258/65529": [0, 1, 2, 4, 5, 7, 8], "1/258/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 26, 65528, 65529, 65531, 65532, 65533], "1/259/1": 0, "1/259/2": 0, "1/259/3": 0, "1/259/10": 0, "1/259/65532": 0, "1/259/65533": 1, "1/259/65528": [], "1/259/65529": [0, 1], "1/259/65531": [1, 2, 3, 10, 65528, 65529, 65531, 65532, 65533], "1/512/0": 0, "1/512/1": 0, "1/512/2": 0, "1/512/3": 0, "1/512/4": 0, "1/512/5": 0, "1/512/6": 0, "1/512/7": 0, "1/512/8": 0, "1/512/9": 0, "1/512/10": 0, "1/512/11": 0, "1/512/12": 0, "1/512/16": 0, "1/512/17": 0, "1/512/18": 0, "1/512/19": 0, "1/512/20": 0, "1/512/21": 0, "1/512/22": 0, "1/512/23": 0, "1/512/32": 0, "1/512/33": 0, "1/512/65532": 31, "1/512/65533": 4, "1/512/65528": [], "1/512/65529": [], "1/512/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 32, 33, 65528, 65529, 65531, 65532, 65533], "1/513/0": 0, "1/513/3": 700, "1/513/4": 3000, "1/513/5": 1600, "1/513/6": 3200, "1/513/17": 2600, "1/513/18": 2000, "1/513/21": 700, "1/513/22": 3000, "1/513/23": 1600, "1/513/24": 3200, "1/513/25": 25, "1/513/27": 4, "1/513/28": 1, "1/513/72": [], "1/513/73": [], "1/513/74": 0, "1/513/75": 0, "1/513/77": null, "1/513/78": "", "1/513/79": "", "1/513/80": [], "1/513/81": [], "1/513/82": false, "1/513/83": 0, "1/513/84": 0, "1/513/85": null, "1/513/65532": 35, "1/513/65533": 6, "1/513/65528": [], "1/513/65529": [0], "1/513/65531": [0, 3, 4, 5, 6, 17, 18, 21, 22, 23, 24, 25, 27, 28, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 65528, 65529, 65531, 65532, 65533], "1/514/0": 0, "1/514/1": 2, "1/514/2": 0, "1/514/3": 0, "1/514/4": 100, "1/514/5": 0, "1/514/6": 0, "1/514/7": 3, "1/514/8": 0, "1/514/9": 3, "1/514/10": 0, "1/514/11": 0, "1/514/65532": 63, "1/514/65533": 4, "1/514/65528": [], "1/514/65529": [0], "1/514/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 65528, 65529, 65531, 65532, 65533], "1/516/0": 0, "1/516/1": 0, "1/516/2": 0, "1/516/65532": 0, "1/516/65533": 2, "1/516/65528": [], "1/516/65529": [], "1/516/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533], "1/768/0": 0, "1/768/1": 0, "1/768/2": 0, "1/768/3": 24939, "1/768/4": 24701, "1/768/5": 0, "1/768/6": "", "1/768/7": 0, "1/768/8": 2, "1/768/15": 0, "1/768/16": 0, "1/768/17": 0, "1/768/18": 0, "1/768/19": 0, "1/768/21": 0, "1/768/22": 0, "1/768/23": 0, "1/768/25": 0, "1/768/26": 0, "1/768/27": 0, "1/768/32": 0, "1/768/33": 0, "1/768/34": 0, "1/768/36": 0, "1/768/37": 0, "1/768/38": 0, "1/768/40": 0, "1/768/41": 0, "1/768/42": 0, "1/768/48": 0, "1/768/49": 0, "1/768/50": 0, "1/768/51": 0, "1/768/52": 0, "1/768/54": 0, "1/768/55": 0, "1/768/56": 0, "1/768/58": 0, "1/768/59": 0, "1/768/60": 0, "1/768/16384": 0, "1/768/16385": 2, "1/768/16386": 0, "1/768/16387": 0, "1/768/16388": 25, "1/768/16389": 8960, "1/768/16390": 0, "1/768/16394": 31, "1/768/16395": 0, "1/768/16396": 65279, "1/768/16397": 0, "1/768/16400": 0, "1/768/65532": 31, "1/768/65533": 6, "1/768/65528": [], "1/768/65529": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 64, 65, 66, 67, 68, 71, 75, 76], "1/768/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 32, 33, 34, 36, 37, 38, 40, 41, 42, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 16384, 16385, 16386, 16387, 16388, 16389, 16390, 16394, 16395, 16396, 16397, 16400, 65528, 65529, 65531, 65532, 65533], "1/769/0": 1, "1/769/1": 254, "1/769/2": 0, "1/769/16": 1, "1/769/17": 254, "1/769/20": 0, "1/769/21": null, "1/769/32": 0, "1/769/48": "", "1/769/49": "", "1/769/50": null, "1/769/51": 0, "1/769/52": 0, "1/769/53": null, "1/769/65532": 0, "1/769/65533": 4, "1/769/65528": [], "1/769/65529": [], "1/769/65531": [0, 1, 2, 16, 17, 20, 21, 32, 48, 49, 50, 51, 52, 53, 65528, 65529, 65531, 65532, 65533], "1/1024/0": 0, "1/1024/1": 1, "1/1024/2": 65534, "1/1024/3": 0, "1/1024/4": null, "1/1024/65532": 0, "1/1024/65533": 3, "1/1024/65528": [], "1/1024/65529": [], "1/1024/65531": [0, 1, 2, 3, 4, 65528, 65529, 65531, 65532, 65533], "1/1026/0": null, "1/1026/1": null, "1/1026/2": null, "1/1026/3": 0, "1/1026/65532": 0, "1/1026/65533": 4, "1/1026/65528": [], "1/1026/65529": [], "1/1026/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "1/1027/0": 0, "1/1027/1": 0, "1/1027/2": 0, "1/1027/65532": 0, "1/1027/65533": 3, "1/1027/65528": [], "1/1027/65529": [], "1/1027/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533], "1/1028/0": 5, "1/1028/1": 0, "1/1028/2": 100, "1/1028/3": 0, "1/1028/65532": 0, "1/1028/65533": 3, "1/1028/65528": [], "1/1028/65529": [], "1/1028/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "1/1029/0": 0, "1/1029/1": 0, "1/1029/2": 10000, "1/1029/3": 0, "1/1029/65532": 0, "1/1029/65533": 3, "1/1029/65528": [], "1/1029/65529": [], "1/1029/65531": [0, 1, 2, 3, 65528, 65529, 65531, 65532, 65533], "1/1030/0": 0, "1/1030/1": 0, "1/1030/2": 1, "1/1030/65532": 0, "1/1030/65533": 4, "1/1030/65528": [], "1/1030/65529": [], "1/1030/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533], "1/1036/0": 1.0, "1/1036/1": 0.0, "1/1036/2": 1000.0, "1/1036/3": 1.0, "1/1036/4": 320, "1/1036/5": 1.0, "1/1036/6": 320, "1/1036/7": 0.0, "1/1036/8": 0, "1/1036/9": 0, "1/1036/10": 1, "1/1036/65532": 63, "1/1036/65533": 3, "1/1036/65528": [], "1/1036/65529": [], "1/1036/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1037/0": 2.0, "1/1037/1": 0.0, "1/1037/2": 1000.0, "1/1037/3": 1.0, "1/1037/4": 320, "1/1037/5": 1.0, "1/1037/6": 320, "1/1037/7": 0.0, "1/1037/8": 0, "1/1037/9": 0, "1/1037/10": 1, "1/1037/65532": 63, "1/1037/65533": 3, "1/1037/65528": [], "1/1037/65529": [], "1/1037/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1043/0": 1.0, "1/1043/1": 0.0, "1/1043/2": 1000.0, "1/1043/3": 1.0, "1/1043/4": 320, "1/1043/5": 1.0, "1/1043/6": 320, "1/1043/7": 0.0, "1/1043/8": 0, "1/1043/9": 0, "1/1043/10": 1, "1/1043/65532": 63, "1/1043/65533": 3, "1/1043/65528": [], "1/1043/65529": [], "1/1043/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1045/0": 1.0, "1/1045/1": 0.0, "1/1045/2": 1000.0, "1/1045/3": 1.0, "1/1045/4": 320, "1/1045/5": 1.0, "1/1045/6": 320, "1/1045/7": 0.0, "1/1045/8": 0, "1/1045/9": 0, "1/1045/10": 1, "1/1045/65532": 63, "1/1045/65533": 3, "1/1045/65528": [], "1/1045/65529": [], "1/1045/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1066/0": 1.0, "1/1066/1": 0.0, "1/1066/2": 1000.0, "1/1066/3": 1.0, "1/1066/4": 320, "1/1066/5": 1.0, "1/1066/6": 320, "1/1066/7": 0.0, "1/1066/8": 0, "1/1066/9": 0, "1/1066/10": 1, "1/1066/65532": 63, "1/1066/65533": 3, "1/1066/65528": [], "1/1066/65529": [], "1/1066/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1067/0": 1.0, "1/1067/1": 0.0, "1/1067/2": 1000.0, "1/1067/3": 1.0, "1/1067/4": 320, "1/1067/5": 1.0, "1/1067/6": 320, "1/1067/7": 0.0, "1/1067/8": 0, "1/1067/9": 0, "1/1067/10": 1, "1/1067/65532": 63, "1/1067/65533": 3, "1/1067/65528": [], "1/1067/65529": [], "1/1067/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1068/0": 1.0, "1/1068/1": 0.0, "1/1068/2": 1000.0, "1/1068/3": 1.0, "1/1068/4": 320, "1/1068/5": 1.0, "1/1068/6": 320, "1/1068/7": 0.0, "1/1068/8": 0, "1/1068/9": 0, "1/1068/10": 1, "1/1068/65532": 63, "1/1068/65533": 3, "1/1068/65528": [], "1/1068/65529": [], "1/1068/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1069/0": 1.0, "1/1069/1": 0.0, "1/1069/2": 1000.0, "1/1069/3": 1.0, "1/1069/4": 320, "1/1069/5": 1.0, "1/1069/6": 320, "1/1069/7": 0.0, "1/1069/8": 0, "1/1069/9": 0, "1/1069/10": 1, "1/1069/65532": 63, "1/1069/65533": 3, "1/1069/65528": [], "1/1069/65529": [], "1/1069/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1070/0": 1.0, "1/1070/1": 0.0, "1/1070/2": 1000.0, "1/1070/3": 1.0, "1/1070/4": 320, "1/1070/5": 1.0, "1/1070/6": 320, "1/1070/7": 0.0, "1/1070/8": 0, "1/1070/9": 0, "1/1070/10": 1, "1/1070/65532": 63, "1/1070/65533": 3, "1/1070/65528": [], "1/1070/65529": [], "1/1070/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1071/0": 1.0, "1/1071/1": 0.0, "1/1071/2": 1000.0, "1/1071/3": 1.0, "1/1071/4": 320, "1/1071/5": 1.0, "1/1071/6": 320, "1/1071/7": 0.0, "1/1071/8": 0, "1/1071/9": 0, "1/1071/10": 1, "1/1071/65532": 63, "1/1071/65533": 3, "1/1071/65528": [], "1/1071/65529": [], "1/1071/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 65528, 65529, 65531, 65532, 65533], "1/1283/0": "", "1/1283/65532": 0, "1/1283/65533": 1, "1/1283/65528": [], "1/1283/65529": [], "1/1283/65531": [0, 65528, 65529, 65531, 65532, 65533], "1/1288/65532": 0, "1/1288/65533": 1, "1/1288/65528": [], "1/1288/65529": [0], "1/1288/65531": [65528, 65529, 65531, 65532, 65533], "1/2820/0": 0, "1/2820/772": 0, "1/2820/1285": 65535, "1/2820/1286": 32768, "1/2820/1287": 32768, "1/2820/1288": 65535, "1/2820/1289": 65535, "1/2820/1290": 65535, "1/2820/1291": -1, "1/2820/1292": -1, "1/2820/1293": -1, "1/2820/65532": 0, "1/2820/65533": 3, "1/2820/65528": [], "1/2820/65529": [], "1/2820/65531": [0, 772, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 65528, 65529, 65531, 65532, 65533], "1/4294048773/0": false, "1/4294048773/1": 0, "1/4294048773/2": 0, "1/4294048773/3": 0, "1/4294048773/4": 0, "1/4294048773/5": 0, "1/4294048773/6": 0, "1/4294048773/7": 0, "1/4294048773/8": 0, "1/4294048773/9": 0, "1/4294048773/10": 0, "1/4294048773/11": 0, "1/4294048773/12": 0, "1/4294048773/13": 0, "1/4294048773/14": 0, "1/4294048773/15": 0, "1/4294048773/16": 0, "1/4294048773/17": 0, "1/4294048773/18": 0, "1/4294048773/19": 0, "1/4294048773/20": 0, "1/4294048773/21": 0, "1/4294048773/22": 0, "1/4294048773/23": 0.0, "1/4294048773/24": 0.0, "1/4294048773/25": "", "1/4294048773/26": [0, 0, 0, 0], "1/4294048773/27": ["", "", "", ""], "1/4294048773/28": [{"0": 0, "1": ""}, {"0": 0, "1": ""}, {"0": 0, "1": ""}, {"0": 0, "1": ""}], "1/4294048773/29": "", "1/4294048773/30": "", "1/4294048773/31": "", "1/4294048773/32": 0, "1/4294048773/33": 0, "1/4294048773/34": 0, "1/4294048773/35": [{"0": null, "3": null, "6": null, "9": null}], "1/4294048773/36": 0, "1/4294048773/37": {"0": 0, "1": false, "2": 0, "3": "", "4": "", "5": 0, "6": 0.0, "7": 0.0}, "1/4294048773/38": 70, "1/4294048773/39": -20, "1/4294048773/40": 200, "1/4294048773/41": -100, "1/4294048773/42": ["MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=", "MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=", "MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=", "MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY="], "1/4294048773/43": [], "1/4294048773/48": false, "1/4294048773/49": {"TLVValue": null, "Reason": "InteractionModelError: InvalidDataType (0x8d)"}, "1/4294048773/50": {"TLVValue": null, "Reason": "InteractionModelError: Failure (0x1)"}, "1/4294048773/16384": false, "1/4294048773/16385": 0, "1/4294048773/16386": 0, "1/4294048773/16387": 0, "1/4294048773/16388": 0, "1/4294048773/16389": 0, "1/4294048773/16390": 0, "1/4294048773/16391": 0, "1/4294048773/16392": 0, "1/4294048773/16393": 0, "1/4294048773/16394": 0, "1/4294048773/16395": 0, "1/4294048773/16396": 0, "1/4294048773/16397": 0, "1/4294048773/16398": 0, "1/4294048773/16399": 0, "1/4294048773/16400": 0, "1/4294048773/16401": 0, "1/4294048773/16402": 0, "1/4294048773/16403": 0, "1/4294048773/16404": 0, "1/4294048773/16405": 0, "1/4294048773/16406": 0, "1/4294048773/16407": 0.0, "1/4294048773/16408": 0.0, "1/4294048773/16409": "", "1/4294048773/16414": "", "1/4294048773/16420": 0, "1/4294048773/16421": null, "1/4294048773/16422": 70, "1/4294048773/16423": -20, "1/4294048773/16424": 200, "1/4294048773/16425": -100, "1/4294048773/4294070017": 0, "1/4294048773/65532": 0, "1/4294048773/65533": 1, "1/4294048773/65528": [0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 4294049979], "1/4294048773/65529": [0, 1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 4294049962], "1/4294048773/65531": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 16384, 16385, 16386, 16387, 16388, 16389, 16390, 16391, 16392, 16393, 16394, 16395, 16396, 16397, 16398, 16399, 16400, 16401, 16402, 16403, 16404, 16405, 16406, 16407, 16408, 16409, 16414, 16420, 16421, 16422, 16423, 16424, 16425, 16426, 65528, 65529, 65531, 4294070017, 65532, 65533], "2/3/0": 0, "2/3/1": 0, "2/3/65532": 0, "2/3/65533": 4, "2/3/65528": [], "2/3/65529": [0, 64], "2/3/65531": [0, 1, 65528, 65529, 65531, 65532, 65533], "2/4/0": 128, "2/4/65532": 1, "2/4/65533": 4, "2/4/65528": [0, 1, 2, 3], "2/4/65529": [0, 1, 2, 3, 4, 5], "2/4/65531": [0, 65528, 65529, 65531, 65532, 65533], "2/6/0": false, "2/6/16384": true, "2/6/16385": 0, "2/6/16386": 0, "2/6/16387": 0, "2/6/65532": 1, "2/6/65533": 6, "2/6/65528": [], "2/6/65529": [0, 1, 2, 64, 65, 66], "2/6/65531": [0, 16384, 16385, 16386, 16387, 65528, 65529, 65531, 65532, 65533], "2/29/0": [{"0": 256, "1": 1}, {"0": 17, "1": 1}], "2/29/1": [3, 4, 6, 29, 47, 98, 1030], "2/29/2": [], "2/29/3": [], "2/29/4": [{"0": null, "1": 7, "2": 2}, {"0": null, "1": 8, "2": 1}], "2/29/65532": 1, "2/29/65533": 2, "2/29/65528": [], "2/29/65529": [], "2/29/65531": [0, 1, 2, 3, 4, 65528, 65529, 65531, 65532, 65533], "2/47/0": 0, "2/47/1": 1, "2/47/2": "B3", "2/47/14": 0, "2/47/15": false, "2/47/16": 0, "2/47/31": [], "2/47/65532": 2, "2/47/65533": 2, "2/47/65528": [], "2/47/65529": [], "2/47/65531": [0, 1, 2, 14, 15, 16, 31, 65528, 65529, 65531, 65532, 65533], "2/98/0": null, "2/98/1": 16, "2/98/2": [], "2/98/65532": 1, "2/98/65533": 1, "2/98/65528": [0, 1, 2, 3, 4, 6, 64], "2/98/65529": [0, 1, 2, 3, 4, 5, 6, 64], "2/98/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533], "2/1030/0": 0, "2/1030/1": 0, "2/1030/2": 1, "2/1030/65532": 0, "2/1030/65533": 4, "2/1030/65528": [], "2/1030/65529": [], "2/1030/65531": [0, 1, 2, 65528, 65529, 65531, 65532, 65533]}, "attribute_subscriptions": []}]')

#message = json.loads('{"fabric_id": 1, "compressed_fabric_id": 12590601010471996687, "schema_version": 10, "min_supported_schema_version": 9, "sdk_version": "2024.7.1", "wifi_credentials_set": false, "thread_credentials_set": false, "bluetooth_enabled": false}')

#message = json.loads('{"event": "attribute_updated", "data": [1, "1/6/0", false]}')

#needle = jmespath.search("*",message)
#needle = jmespath.search("result[*].node_id",message)
#needle = jmespath.search("result[*]",message)
#needle = jmespath.search("[?node_id == `1`].attributes",message)
#needle = jmespath.search("[?node_id == `1`].attributes", message)

needle = jmespath.search("[?node_id == `1`].attributes.{key: keys(@) | [?starts_with(@, '0/40') == `true`], value: values(@) | [?starts_with(keys(@)[0], '0/40') == `true`]}", message)

needle = jmespath.search("[0].attributes | {keys: keys(@) | [?starts_with(@, '0/40')], values: [keys(@) | [?starts_with(@, '0/40')]]}", message)

if needle is not None:
    print(needle)
else:
    print("could not find")